{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [],
  "dynamicRoutes": [
    {
      "page": "/checkout/[tier]",
      "regex": "^/checkout/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPtier": "nxtPtier"
      },
      "namedRegex": "^/checkout/(?<nxtPtier>[^/]+?)(?:/)?$"
    },
    {
      "page": "/events/[id]/chat",
      "regex": "^/events/([^/]+?)/chat(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/events/(?<nxtPid>[^/]+?)/chat(?:/)?$"
    },
    {
      "page": "/zodiac/[sign]",
      "regex": "^/zodiac/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPsign": "nxtPsign"
      },
      "namedRegex": "^/zodiac/(?<nxtPsign>[^/]+?)(?:/)?$"
    },
    {
      "page": "/zodiac/[sign]/birth-chart-compatibility",
      "regex": "^/zodiac/([^/]+?)/birth\\-chart\\-compatibility(?:/)?$",
      "routeKeys": {
        "nxtPsign": "nxtPsign"
      },
      "namedRegex": "^/zodiac/(?<nxtPsign>[^/]+?)/birth\\-chart\\-compatibility(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/admin",
      "regex": "^/admin(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin(?:/)?$"
    },
    {
      "page": "/birthday-blessing",
      "regex": "^/birthday\\-blessing(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/birthday\\-blessing(?:/)?$"
    },
    {
      "page": "/blog",
      "regex": "^/blog(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/blog(?:/)?$"
    },
    {
      "page": "/checkout",
      "regex": "^/checkout(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/checkout(?:/)?$"
    },
    {
      "page": "/custom-cake",
      "regex": "^/custom\\-cake(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/custom\\-cake(?:/)?$"
    },
    {
      "page": "/dashboard",
      "regex": "^/dashboard(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboard(?:/)?$"
    },
    {
      "page": "/events",
      "regex": "^/events(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/events(?:/)?$"
    },
    {
      "page": "/events/create",
      "regex": "^/events/create(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/events/create(?:/)?$"
    },
    {
      "page": "/events/galaxy-rooftop",
      "regex": "^/events/galaxy\\-rooftop(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/events/galaxy\\-rooftop(?:/)?$"
    },
    {
      "page": "/faq",
      "regex": "^/faq(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/faq(?:/)?$"
    },
    {
      "page": "/favicon.ico",
      "regex": "^/favicon\\.ico(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/favicon\\.ico(?:/)?$"
    },
    {
      "page": "/host-profile",
      "regex": "^/host\\-profile(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/host\\-profile(?:/)?$"
    },
    {
      "page": "/invite",
      "regex": "^/invite(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/invite(?:/)?$"
    },
    {
      "page": "/legal",
      "regex": "^/legal(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/legal(?:/)?$"
    },
    {
      "page": "/login",
      "regex": "^/login(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/login(?:/)?$"
    },
    {
      "page": "/luxury",
      "regex": "^/luxury(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/luxury(?:/)?$"
    },
    {
      "page": "/matches",
      "regex": "^/matches(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/matches(?:/)?$"
    },
    {
      "page": "/profile",
      "regex": "^/profile(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/profile(?:/)?$"
    },
    {
      "page": "/signup",
      "regex": "^/signup(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/signup(?:/)?$"
    },
    {
      "page": "/testimonials",
      "regex": "^/testimonials(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/testimonials(?:/)?$"
    },
    {
      "page": "/tiers",
      "regex": "^/tiers(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/tiers(?:/)?$"
    },
    {
      "page": "/venues",
      "regex": "^/venues(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/venues(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "RSC",
    "varyHeader": "RSC, Next-Router-State-Tree, Next-Router-Prefetch, Next-Router-Segment-Prefetch",
    "prefetchHeader": "Next-Router-Prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "Next-Router-Segment-Prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  },
  "rewrites": []
}